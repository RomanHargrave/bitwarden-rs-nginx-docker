daemon on;
pid /var/run/nginx.pid;

events {
   worker_connections 768;
}

http {
   access_log /data/logs/nginx/access.log;
   error_log  /data/logs/nginx/error.log;

   include /etc/nginx/mime.types;
   default_type application/octet-stream;

   sendfile on;
   tcp_nopush on;
   tcp_nodelay on;
   keepalive_timeout 63;
   types_hash_max_size 2048;
   gzip on;

   upstream bitwarden_api {
      server 127.0.0.1:8080;
   }

   upstream bitwarden_notification {
      server 127.0.0.1:3012;
   }

   server {
      listen 172.17.0.0:80;
   }

   # Redirect HTTP traffic to HTTPS
   server {
      listen 80;

      location / {
         return 301 https://$host$request_uri;
      }

      # Supports stackdriver monitoring (mostly for google cloud)
      location /nginx_status {
         stub_status on;
         access_log off;
         allow 127.0.0.1/24;
         allow 172.17.0.0/24;
         deny all;
      }
   }

   # HTTPS Proxy config with location for certificate issuance challenges
   server {
      listen 443 ssl http2;
      server_name ${DOMAIN};

      # Vault / API
      location / {
         proxy_pass http://bitwarden_api;

         proxy_set_header X-Real-IP       $remote_addr;
         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      }

      # WebSocket (Notification System)
      location /notifications/hub {
         proxy_pass http://bitwarden_notification;
         proxy_set_header Upgrade $http_upgrade;
         proxy_set_header Connection "upgrade";

         proxy_set_header X-Real-IP       $remote_addr;
         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      }

      # Override to support negotiation endpoint for above
      location /notifications/hub/negotiate {
         proxy_pass http://bitwarden_api;

         proxy_set_header X-Real-IP       $remote_addr;
         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      }

      ###############################
      # SSL Support                 #
      ###############################

      # Support for certbot
      location /.well-known/acme-challenge {
         default_type "text/plain";
         root /srv/certbot;
      }

      ssl_certificate      /data/letsencrypt/live/${DOMAIN}/fullchain.pem;
      ssl_certificate_key  /data/letsencrypt/live/${DOMAIN}/privkey.pem;

      add_header  Strict-Transport-Security max-age=15768000;

      ssl_session_cache    shared:SSL:50m;
      ssl_session_timeout  1d;
      ssl_session_tickets  off;

      ssl_prefer_server_ciphers  on;
      ssl_protocols              TLSv1.2;
      ssl_ciphers                'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';

      resolver                1.1.1.1 8.8.8.8 8.8.4.4 valid=300s;
      ssl_stapling            on;
      ssl_stapling_verify     on;
      ssl_trusted_certificate /data/letsencrypt/live/${DOMAIN}/chain.pem;

   }
}
# vim: set nowrap :
